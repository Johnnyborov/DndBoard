@page "/"
@using DndBoardCommon
@namespace DndBoardServer.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>DndBoardServer</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href=".clientA/DndBoardCommon.styles.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Blazor.Extensions.Canvas/blazor.extensions.canvas.js"></script>
        <script>
        function getElementOffsets(el) {
            var elRect = el.getBoundingClientRect();
            var obj = {};
            obj.offsetLeft = Math.floor(elRect.left);
            obj.offsetTop = Math.floor(elRect.top);
            return JSON.stringify(obj);
        }
    </script>
    <script>
        var mapComponentInstance;
        function initMapComponent(instance) {
            mapComponentInstance = instance;
            window.requestAnimationFrame(redraw);
        }
        function redraw() {
            mapComponentInstance.invokeMethodAsync('Redraw');
            window.requestAnimationFrame(redraw);
        }
        function clearMapCanvas() {
            var mapCanvas = document.getElementById('MapCanvasDiv').getElementsByTagName('canvas')[0];;
            var canvasW = mapCanvas.getBoundingClientRect().width;
            var canvasH = mapCanvas.getBoundingClientRect().height;

            var ctx = mapCanvas.getContext('2d');
            ctx.clearRect(0, 0, canvasW, canvasH);
            ctx.fillStyle = 'rgb(0,200,0)';
            ctx.fillRect(0, 0, canvasW, canvasH);
        }
        function redrawImages(img, x, y) {
            var mapCanvas = document.getElementById('MapCanvasDiv').getElementsByTagName('canvas')[0];;
            var ctx = mapCanvas.getContext('2d');
            ctx.drawImage(img, x, y);
        }
    </script>
</body>
</html>
